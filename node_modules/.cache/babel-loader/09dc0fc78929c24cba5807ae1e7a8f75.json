{"ast":null,"code":"var _jsxFileName = \"/home/kg/Documents/Project/video-calling-web-app/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport io from \"socket.io-client\";\nimport { nanoid } from \"nanoid\";\nimport Peer from \"peerjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(\"https://webrtckgserver.herokuapp.com\", {\n  secure: true\n});\nconst initialRoomId = nanoid(4);\nlet myPeer = new Peer((initialRoomId, {\n  host: \"webrtckgserver.herokuapp.com\",\n  port: \"443\",\n  path: \"/peerjs\",\n  secure: true\n})); // let userId = null;\n\nconst VideoStream = _ref => {\n  _s();\n\n  let {\n    item,\n    index,\n    size\n  } = _ref;\n  const videoRef = useRef();\n  useEffect(() => {\n    videoRef.current.srcObject = item.stream;\n  }, [videoRef]);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    className: \"video\",\n    muted: index === 0,\n    width: size,\n    height: size,\n    autoPlay: true,\n    ref: videoRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoStream, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n\n_c = VideoStream;\n\nfunction App() {\n  _s2();\n\n  const [roomId, setRoomId] = useState(initialRoomId);\n  const [roomIdText, setRoomIdText] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [videos, setVideos] = useState([]);\n  const [stream, setStream] = useState(null);\n  const [size, setSize] = useState(\"60%\");\n  useEffect(() => {\n    myPeer.on(\"open\", id => {\n      setUserId(id);\n      socket.emit(\"join-room\", {\n        roomId,\n        userId: id\n      });\n    });\n  }, []);\n  useEffect(() => {\n    if (userId) {\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(stream => {\n        setStream(stream);\n        setVideos([{\n          userId: userId,\n          stream: stream\n        }]);\n      });\n    }\n\n    return () => {};\n  }, [userId]);\n  useEffect(() => {\n    if (stream) {\n      myPeer.on(\"call\", call => {\n        console.log(\"..............................................\");\n        console.log(\"on call\");\n        console.log({\n          call\n        });\n        console.log(\"..............................................\");\n        call.answer(stream);\n        call.on(\"stream\", userVideoStream => {\n          console.log(\"..............................................\");\n          console.log(\"on call on stream\");\n          console.log({\n            userId,\n            userVideoStream\n          });\n          console.log(\"..............................................\");\n          const dummy = [...videos];\n          console.log(dummy);\n          dummy.push({\n            userId: userId,\n            stream: userVideoStream\n          });\n          setVideos(dummy);\n        });\n      });\n      socket.on(\"user-connected\", payload => {\n        const call = myPeer.call(payload, stream);\n        console.log(\"..............................................\");\n        console.log(\"on user connect call to \", payload);\n        console.log({\n          call\n        });\n        console.log(\"..............................................\");\n        call.on(\"stream\", userVideoStream => {\n          console.log(\"..............................................\");\n          console.log(\"on user connected on stream\");\n          console.log({\n            payload,\n            userVideoStream\n          });\n          console.log(\"..............................................\");\n          const dummy = [...videos];\n          console.log(dummy);\n          dummy.push({\n            userId: payload,\n            stream: userVideoStream\n          });\n          setVideos(dummy);\n        });\n      });\n      socket.on(\"close\", () => {});\n    }\n\n    socket.on(\"user-disconnected\", _ref2 => {\n      let {\n        userId\n      } = _ref2;\n      const tempArray = videos.filter(item => item.userId !== userId);\n      setVideos([...tempArray]);\n    });\n    return () => {\n      socket.removeAllListeners();\n    };\n  }, [stream, videos]);\n  useEffect(() => {\n    socket.emit(\"join-room\", {\n      roomId,\n      userId\n    });\n    setRoomIdText(roomId);\n  }, [roomId]);\n\n  const joinRoom = e => {\n    e.preventDefault();\n    setRoomId(roomIdText);\n  };\n\n  useEffect(() => {\n    const videoLength = videos.length;\n    if (videoLength === 1) setSize(\"60%\");else if (videoLength === 2) setSize(\"46%\");else if (videoLength > 2) setSize(\"30%\");else setSize(\"60%\");\n    console.log(\"..............................................\");\n    console.log(\"videos changed\");\n    console.log({\n      videos\n    });\n    console.log(\"..............................................\");\n  }, [videos]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Your RoomId: \", roomId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Your userId: \", userId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"text-field-container\",\n          onSubmit: joinRoom,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"join-room\",\n            placeholder: \"roomId\",\n            value: roomIdText,\n            onChange: e => setRoomIdText(e.target.value),\n            className: \"text-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-join\",\n            type: \"submit\",\n            children: \"join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: videos.length > 0 && videos.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(VideoStream, {\n            item: item,\n            index: index,\n            size: size\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s2(App, \"ZV0kavLmVTclZPJ7l4vXAMtkan4=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VideoStream\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/kg/Documents/Project/video-calling-web-app/src/App.js"],"names":["useState","useEffect","useRef","io","nanoid","Peer","socket","secure","initialRoomId","myPeer","host","port","path","VideoStream","item","index","size","videoRef","current","srcObject","stream","App","roomId","setRoomId","roomIdText","setRoomIdText","userId","setUserId","videos","setVideos","setStream","setSize","on","id","emit","navigator","mediaDevices","getUserMedia","video","audio","then","call","console","log","answer","userVideoStream","dummy","push","payload","tempArray","filter","removeAllListeners","joinRoom","e","preventDefault","videoLength","length","target","value","map"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport io from \"socket.io-client\";\nimport { nanoid } from \"nanoid\";\nimport Peer from \"peerjs\";\n\nconst socket = io(\"https://webrtckgserver.herokuapp.com\", { secure: true });\n\nconst initialRoomId = nanoid(4);\n\nlet myPeer = new Peer(\n  (initialRoomId,\n  {\n    host: \"webrtckgserver.herokuapp.com\",\n    port: \"443\",\n    path: \"/peerjs\",\n    secure: true,\n  })\n);\n\n// let userId = null;\nconst VideoStream = ({ item, index, size }) => {\n  const videoRef = useRef();\n  useEffect(() => {\n    videoRef.current.srcObject = item.stream;\n  }, [videoRef]);\n  return (\n    <video\n      className=\"video\"\n      muted={index === 0}\n      width={size}\n      height={size}\n      autoPlay\n      ref={videoRef}\n    />\n  );\n};\nfunction App() {\n  const [roomId, setRoomId] = useState(initialRoomId);\n  const [roomIdText, setRoomIdText] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [videos, setVideos] = useState([]);\n  const [stream, setStream] = useState(null);\n  const [size, setSize] = useState(\"60%\");\n\n  useEffect(() => {\n    myPeer.on(\"open\", (id) => {\n      setUserId(id);\n\n      socket.emit(\"join-room\", { roomId, userId: id });\n    });\n  }, []);\n\n  useEffect(() => {\n    if (userId) {\n      navigator.mediaDevices\n        .getUserMedia({\n          video: true,\n          audio: true,\n        })\n        .then((stream) => {\n          setStream(stream);\n          setVideos([{ userId: userId, stream: stream }]);\n        });\n    }\n    return () => {};\n  }, [userId]);\n\n  useEffect(() => {\n    if (stream) {\n      myPeer.on(\"call\", (call) => {\n        console.log(\"..............................................\");\n        console.log(\"on call\");\n        console.log({ call });\n        console.log(\"..............................................\");\n\n        call.answer(stream);\n\n        call.on(\"stream\", (userVideoStream) => {\n          console.log(\"..............................................\");\n          console.log(\"on call on stream\");\n          console.log({ userId, userVideoStream });\n          console.log(\"..............................................\");\n\n          const dummy = [...videos];\n          console.log(dummy);\n          dummy.push({ userId: userId, stream: userVideoStream });\n          setVideos(dummy);\n        });\n      });\n\n      socket.on(\"user-connected\", (payload) => {\n        const call = myPeer.call(payload, stream);\n        console.log(\"..............................................\");\n        console.log(\"on user connect call to \", payload);\n        console.log({ call });\n        console.log(\"..............................................\");\n\n        call.on(\"stream\", (userVideoStream) => {\n          console.log(\"..............................................\");\n          console.log(\"on user connected on stream\");\n\n          console.log({ payload, userVideoStream });\n          console.log(\"..............................................\");\n\n          const dummy = [...videos];\n          console.log(dummy);\n          dummy.push({ userId: payload, stream: userVideoStream });\n          setVideos(dummy);\n        });\n      });\n\n      socket.on(\"close\", () => {});\n    }\n\n    socket.on(\"user-disconnected\", ({ userId }) => {\n      const tempArray = videos.filter((item) => item.userId !== userId);\n      setVideos([...tempArray]);\n    });\n\n    return () => {\n      socket.removeAllListeners();\n    };\n  }, [stream, videos]);\n\n  useEffect(() => {\n    socket.emit(\"join-room\", { roomId, userId });\n    setRoomIdText(roomId);\n  }, [roomId]);\n\n  const joinRoom = (e) => {\n    e.preventDefault();\n    setRoomId(roomIdText);\n  };\n\n  useEffect(() => {\n    const videoLength = videos.length;\n    if (videoLength === 1) setSize(\"60%\");\n    else if (videoLength === 2) setSize(\"46%\");\n    else if (videoLength > 2) setSize(\"30%\");\n    else setSize(\"60%\");\n    console.log(\"..............................................\");\n    console.log(\"videos changed\");\n    console.log({ videos });\n    console.log(\"..............................................\");\n  }, [videos]);\n\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"header\">\n          <div>\n            <h3>Your RoomId: {roomId}</h3>\n            <h3>Your userId: {userId}</h3>\n          </div>\n          <form className=\"text-field-container\" onSubmit={joinRoom}>\n            <input\n              type=\"text\"\n              name=\"join-room\"\n              placeholder=\"roomId\"\n              value={roomIdText}\n              onChange={(e) => setRoomIdText(e.target.value)}\n              className=\"text-field\"\n            />\n            <button className=\"btn-join\" type=\"submit\">\n              join\n            </button>\n          </form>\n        </div>\n        <div className=\"video-container\">\n          {videos.length > 0 &&\n            videos.map((item, index) => {\n              return (\n                <VideoStream\n                  key={index}\n                  item={item}\n                  index={index}\n                  size={size}\n                />\n              );\n            })}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}